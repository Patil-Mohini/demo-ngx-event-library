import { __decorate, __extends } from "tslib";
import { Component, Directive, Input, Output, EventEmitter, HostBinding, HostListener } from "@angular/core";
import { customValueAccessorFactory, CustomValueAccessor } from "../../../misc/util/internal";
var SuiRating = /** @class */ (function () {
    function SuiRating() {
        this.hoveredIndex = -1;
        this.value = 0;
        this.valueChange = new EventEmitter();
        this.maximum = 5;
        this.isReadonly = false;
        this.hasClasses = true;
    }
    Object.defineProperty(SuiRating.prototype, "maximum", {
        get: function () {
            return this._maximum;
        },
        set: function (value) {
            this._maximum = +value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SuiRating.prototype, "icons", {
        get: function () {
            // tslint:disable-next-line:prefer-literal
            return new Array(this.maximum);
        },
        enumerable: true,
        configurable: true
    });
    SuiRating.prototype.onClick = function (i) {
        if (!this.isReadonly) {
            this.value = i + 1;
            this.valueChange.emit(this.value);
        }
    };
    SuiRating.prototype.onMouseover = function (i) {
        this.hoveredIndex = i;
    };
    SuiRating.prototype.onMouseout = function () {
        this.hoveredIndex = -1;
    };
    SuiRating.prototype.writeValue = function (value) {
        this.value = value;
    };
    __decorate([
        HostBinding("class.ui"),
        HostBinding("class.rating")
    ], SuiRating.prototype, "hasClasses", void 0);
    __decorate([
        Output()
    ], SuiRating.prototype, "valueChange", void 0);
    __decorate([
        Input()
    ], SuiRating.prototype, "maximum", null);
    __decorate([
        HostBinding("class.read-only"),
        Input()
    ], SuiRating.prototype, "isReadonly", void 0);
    __decorate([
        HostListener("mouseout")
    ], SuiRating.prototype, "onMouseout", null);
    SuiRating = __decorate([
        Component({
            selector: "sui-rating",
            template: "\n<i class=\"icon\"\n   *ngFor=\"let icon of icons; let i = index\"\n   (mouseover)=\"onMouseover(i)\"\n   (click)=\"onClick(i)\"\n   [class.selected]=\"hoveredIndex >= i && !isReadonly\"\n   [class.active]=\"value > i\">\n</i>\n",
            styles: ["\n:host.read-only .icon {\n    cursor: auto\n}\n"]
        })
    ], SuiRating);
    return SuiRating;
}());
export { SuiRating };
var SuiRatingValueAccessor = /** @class */ (function (_super) {
    __extends(SuiRatingValueAccessor, _super);
    function SuiRatingValueAccessor(host) {
        return _super.call(this, host) || this;
    }
    SuiRatingValueAccessor_1 = SuiRatingValueAccessor;
    var SuiRatingValueAccessor_1;
    SuiRatingValueAccessor.ctorParameters = function () { return [
        { type: SuiRating }
    ]; };
    SuiRatingValueAccessor = SuiRatingValueAccessor_1 = __decorate([
        Directive({
            selector: "sui-rating",
            host: { "(valueChange)": "onChange($event)" },
            providers: [customValueAccessorFactory(SuiRatingValueAccessor_1)]
        })
    ], SuiRatingValueAccessor);
    return SuiRatingValueAccessor;
}(CustomValueAccessor));
export { SuiRatingValueAccessor };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmF0aW5nLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmcyLXNlbWFudGljLXVpLXY5LyIsInNvdXJjZXMiOlsibW9kdWxlcy9yYXRpbmcvY29tcG9uZW50cy9yYXRpbmcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLFdBQVcsRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDN0csT0FBTyxFQUE0QiwwQkFBMEIsRUFBRSxtQkFBbUIsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBbUJ4SDtJQWdDSTtRQUZPLGlCQUFZLEdBQVUsQ0FBQyxDQUFDLENBQUM7UUFHNUIsSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUM7UUFDZixJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksWUFBWSxFQUFVLENBQUM7UUFFOUMsSUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUM7UUFDakIsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7UUFFeEIsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7SUFDM0IsQ0FBQztJQTNCRCxzQkFBVyw4QkFBTzthQUFsQjtZQUNJLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUN6QixDQUFDO2FBRUQsVUFBbUIsS0FBWTtZQUMzQixJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsS0FBSyxDQUFDO1FBQzNCLENBQUM7OztPQUpBO0lBVUQsc0JBQVcsNEJBQUs7YUFBaEI7WUFDSSwwQ0FBMEM7WUFDMUMsT0FBTyxJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDbkMsQ0FBQzs7O09BQUE7SUFjTSwyQkFBTyxHQUFkLFVBQWUsQ0FBUTtRQUNuQixJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRTtZQUNsQixJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDbkIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQ3JDO0lBQ0wsQ0FBQztJQUVNLCtCQUFXLEdBQWxCLFVBQW1CLENBQVE7UUFDdkIsSUFBSSxDQUFDLFlBQVksR0FBRyxDQUFDLENBQUM7SUFDMUIsQ0FBQztJQUdNLDhCQUFVLEdBQWpCO1FBQ0ksSUFBSSxDQUFDLFlBQVksR0FBRyxDQUFDLENBQUMsQ0FBQztJQUMzQixDQUFDO0lBRU0sOEJBQVUsR0FBakIsVUFBa0IsS0FBWTtRQUMxQixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztJQUN2QixDQUFDO0lBekREO1FBRkMsV0FBVyxDQUFDLFVBQVUsQ0FBQztRQUN2QixXQUFXLENBQUMsY0FBYyxDQUFDO2lEQUNPO0lBS25DO1FBREMsTUFBTSxFQUFFO2tEQUMrQjtJQUt4QztRQURDLEtBQUssRUFBRTs0Q0FHUDtJQVFEO1FBRkMsV0FBVyxDQUFDLGlCQUFpQixDQUFDO1FBQzlCLEtBQUssRUFBRTtpREFDa0I7SUErQjFCO1FBREMsWUFBWSxDQUFDLFVBQVUsQ0FBQzsrQ0FHeEI7SUF4RFEsU0FBUztRQWpCckIsU0FBUyxDQUFDO1lBQ1AsUUFBUSxFQUFFLFlBQVk7WUFDdEIsUUFBUSxFQUFFLHVPQVFiO3FCQUNZLGtEQUlaO1NBQ0EsQ0FBQztPQUNXLFNBQVMsQ0E2RHJCO0lBQUQsZ0JBQUM7Q0FBQSxBQTdERCxJQTZEQztTQTdEWSxTQUFTO0FBb0V0QjtJQUE0QywwQ0FBc0M7SUFDOUUsZ0NBQVksSUFBYztlQUN0QixrQkFBTSxJQUFJLENBQUM7SUFDZixDQUFDOytCQUhRLHNCQUFzQjs7O2dCQUNkLFNBQVM7O0lBRGpCLHNCQUFzQjtRQUxsQyxTQUFTLENBQUM7WUFDUCxRQUFRLEVBQUUsWUFBWTtZQUN0QixJQUFJLEVBQUUsRUFBRSxlQUFlLEVBQUUsa0JBQWtCLEVBQUU7WUFDN0MsU0FBUyxFQUFFLENBQUMsMEJBQTBCLENBQUMsd0JBQXNCLENBQUMsQ0FBQztTQUNsRSxDQUFDO09BQ1csc0JBQXNCLENBSWxDO0lBQUQsNkJBQUM7Q0FBQSxBQUpELENBQTRDLG1CQUFtQixHQUk5RDtTQUpZLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRGlyZWN0aXZlLCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIEhvc3RCaW5kaW5nLCBIb3N0TGlzdGVuZXIgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgSUN1c3RvbVZhbHVlQWNjZXNzb3JIb3N0LCBjdXN0b21WYWx1ZUFjY2Vzc29yRmFjdG9yeSwgQ3VzdG9tVmFsdWVBY2Nlc3NvciB9IGZyb20gXCIuLi8uLi8uLi9taXNjL3V0aWwvaW50ZXJuYWxcIjtcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6IFwic3VpLXJhdGluZ1wiLFxuICAgIHRlbXBsYXRlOiBgXG48aSBjbGFzcz1cImljb25cIlxuICAgKm5nRm9yPVwibGV0IGljb24gb2YgaWNvbnM7IGxldCBpID0gaW5kZXhcIlxuICAgKG1vdXNlb3Zlcik9XCJvbk1vdXNlb3ZlcihpKVwiXG4gICAoY2xpY2spPVwib25DbGljayhpKVwiXG4gICBbY2xhc3Muc2VsZWN0ZWRdPVwiaG92ZXJlZEluZGV4ID49IGkgJiYgIWlzUmVhZG9ubHlcIlxuICAgW2NsYXNzLmFjdGl2ZV09XCJ2YWx1ZSA+IGlcIj5cbjwvaT5cbmAsXG4gICAgc3R5bGVzOiBbYFxuOmhvc3QucmVhZC1vbmx5IC5pY29uIHtcbiAgICBjdXJzb3I6IGF1dG9cbn1cbmBdXG59KVxuZXhwb3J0IGNsYXNzIFN1aVJhdGluZyBpbXBsZW1lbnRzIElDdXN0b21WYWx1ZUFjY2Vzc29ySG9zdDxudW1iZXI+IHtcbiAgICBASG9zdEJpbmRpbmcoXCJjbGFzcy51aVwiKVxuICAgIEBIb3N0QmluZGluZyhcImNsYXNzLnJhdGluZ1wiKVxuICAgIHB1YmxpYyByZWFkb25seSBoYXNDbGFzc2VzOmJvb2xlYW47XG5cbiAgICBwdWJsaWMgdmFsdWU6bnVtYmVyO1xuXG4gICAgQE91dHB1dCgpXG4gICAgcHVibGljIHZhbHVlQ2hhbmdlOkV2ZW50RW1pdHRlcjxudW1iZXI+O1xuXG4gICAgcHJpdmF0ZSBfbWF4aW11bTpudW1iZXI7XG5cbiAgICBASW5wdXQoKVxuICAgIHB1YmxpYyBnZXQgbWF4aW11bSgpOm51bWJlciB7XG4gICAgICAgIHJldHVybiB0aGlzLl9tYXhpbXVtO1xuICAgIH1cblxuICAgIHB1YmxpYyBzZXQgbWF4aW11bSh2YWx1ZTpudW1iZXIpIHtcbiAgICAgICAgdGhpcy5fbWF4aW11bSA9ICt2YWx1ZTtcbiAgICB9XG5cbiAgICBASG9zdEJpbmRpbmcoXCJjbGFzcy5yZWFkLW9ubHlcIilcbiAgICBASW5wdXQoKVxuICAgIHB1YmxpYyBpc1JlYWRvbmx5OmJvb2xlYW47XG5cbiAgICBwdWJsaWMgZ2V0IGljb25zKCk6dW5kZWZpbmVkW10ge1xuICAgICAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6cHJlZmVyLWxpdGVyYWxcbiAgICAgICAgcmV0dXJuIG5ldyBBcnJheSh0aGlzLm1heGltdW0pO1xuICAgIH1cblxuICAgIHB1YmxpYyBob3ZlcmVkSW5kZXg6bnVtYmVyID0gLTE7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy52YWx1ZSA9IDA7XG4gICAgICAgIHRoaXMudmFsdWVDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyPG51bWJlcj4oKTtcblxuICAgICAgICB0aGlzLm1heGltdW0gPSA1O1xuICAgICAgICB0aGlzLmlzUmVhZG9ubHkgPSBmYWxzZTtcblxuICAgICAgICB0aGlzLmhhc0NsYXNzZXMgPSB0cnVlO1xuICAgIH1cblxuICAgIHB1YmxpYyBvbkNsaWNrKGk6bnVtYmVyKTp2b2lkIHtcbiAgICAgICAgaWYgKCF0aGlzLmlzUmVhZG9ubHkpIHtcbiAgICAgICAgICAgIHRoaXMudmFsdWUgPSBpICsgMTtcbiAgICAgICAgICAgIHRoaXMudmFsdWVDaGFuZ2UuZW1pdCh0aGlzLnZhbHVlKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBvbk1vdXNlb3ZlcihpOm51bWJlcik6dm9pZCB7XG4gICAgICAgIHRoaXMuaG92ZXJlZEluZGV4ID0gaTtcbiAgICB9XG5cbiAgICBASG9zdExpc3RlbmVyKFwibW91c2VvdXRcIilcbiAgICBwdWJsaWMgb25Nb3VzZW91dCgpOnZvaWQge1xuICAgICAgICB0aGlzLmhvdmVyZWRJbmRleCA9IC0xO1xuICAgIH1cblxuICAgIHB1YmxpYyB3cml0ZVZhbHVlKHZhbHVlOm51bWJlcik6dm9pZCB7XG4gICAgICAgIHRoaXMudmFsdWUgPSB2YWx1ZTtcbiAgICB9XG59XG5cbkBEaXJlY3RpdmUoe1xuICAgIHNlbGVjdG9yOiBcInN1aS1yYXRpbmdcIixcbiAgICBob3N0OiB7IFwiKHZhbHVlQ2hhbmdlKVwiOiBcIm9uQ2hhbmdlKCRldmVudClcIiB9LFxuICAgIHByb3ZpZGVyczogW2N1c3RvbVZhbHVlQWNjZXNzb3JGYWN0b3J5KFN1aVJhdGluZ1ZhbHVlQWNjZXNzb3IpXVxufSlcbmV4cG9ydCBjbGFzcyBTdWlSYXRpbmdWYWx1ZUFjY2Vzc29yIGV4dGVuZHMgQ3VzdG9tVmFsdWVBY2Nlc3NvcjxudW1iZXIsIFN1aVJhdGluZz4ge1xuICAgIGNvbnN0cnVjdG9yKGhvc3Q6U3VpUmF0aW5nKSB7XG4gICAgICAgIHN1cGVyKGhvc3QpO1xuICAgIH1cbn1cbiJdfQ==